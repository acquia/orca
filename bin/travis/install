#!/usr/bin/env bash

# NAME
#     install - Install Travis CI dependencies
#
# SYNOPSIS
#     install <branch>
#
# DESCRIPTION
#     Configures the Travis CI environment, installs ORCA, and prepares the SUT.
#
# OPTIONS
#     <branch>
#         The name of the nearest Git version branch, e.g., 1.x or 8.x-1.x. This
#         may be the destination branch of a pull request or the nearest
#         ancestor of a topic branch.

set -e

# Prevent script from being run locally, which can lead to a broken environment
# or lost work.
if [[ -z "$TRAVIS" ]]; then
  echo "Error: This script is meant to run on Travis CI only."
  exit 1
fi

# Require the branch name argument.
if [[ -z "$1" ]]; then
  echo "Missing required branch name argument, e.g.:"
  echo "$0 8.x-1.x"
  exit 127
fi

# Executes a Git command in the Travis CI build directory
function gitc {
  git -C ${TRAVIS_BUILD_DIR} $@
}

# Disable Xdebug.
phpenv config-rm xdebug.ini

# Remove PHP memory limit.
echo 'memory_limit = -1' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

# Prevent outgoing emails.
echo 'sendmail_path = /bin/true' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

# Prevent PHPStan warnings about APCu constants.
echo 'extension = apcu.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

# Install the PECL YAML parser for strict YAML parsing.
yes | pecl install yaml

# Install Composer optimizations for faster builds.
composer global require \
  hirak/prestissimo \
  zaporylie/composer-drupal-optimizations

# Make Composer Patches throw an error when it can't apply a patch.
export COMPOSER_EXIT_ON_PATCH_FAILURE=1

# Ensure the checked out branch is named after the branch name argument.
gitc rev-parse --abbrev-ref HEAD
if [[ $(gitc rev-parse --abbrev-ref HEAD) != "$1" ]]; then
  gitc branch -f $1
  gitc checkout $1
fi
