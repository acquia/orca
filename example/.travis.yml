---
language: php

# The lowest version of PHP supported by Acquia.
php: 7.1

addons:
  # ChromeDriver is used for PHPUnit tests.
  chrome: stable

cache:
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/.drush/cache"
    - "$TMPDIR/phpstan/cache"

env:
  global:
    # Provide your package's name.
    - ORCA_SUT_NAME=drupal/example
    # Specify the name of the nearest Git version branch, e.g., 1.x or 8.x-1.x.
    # This may be the destination branch of a pull request or the nearest
    # ancestor of a topic branch.
    - ORCA_SUT_BRANCH=8.x-1.x

# Execution time is drastically reduced by splitting the build into multiple
# concurrent jobs.
matrix:
  # Mark the build as finished once the only remaining jobs are allowed to fail.
  fast_finish: true
  include:
    - { name: "Static code analysis", env: ORCA_JOB=STATIC_CODE_ANALYSIS }
    - { name: "Deprecated code scan w/ SUT", env: ORCA_JOB=DEPRECATED_CODE_SCAN_SUT }
    - { name: "Deprecated code scan w/ dependencies", env: ORCA_JOB=DEPRECATED_CODE_SCAN_CONTRIB }
    - { name: "Isolated test w/ recommended package versions", env: ORCA_JOB=ISOLATED_RECOMMENDED }
    - { name: "Integrated test w/ recommended package versions", env: ORCA_JOB=INTEGRATED_RECOMMENDED }
    - { name: "Isolated test w/ dev package versions", env: ORCA_JOB=ISOLATED_DEV }
    - { name: "Integrated test w/ dev package versions", env: ORCA_JOB=INTEGRATED_DEV }
    - { name: "Previous minor version of Drupal core", env: ORCA_JOB=CORE_PREVIOUS }
    - { name: "Next pre-release of Drupal core", env: ORCA_JOB=CORE_NEXT }
  allow_failures:
    - env: ORCA_JOB=DEPRECATED_CODE_SCAN_SUT
    - env: ORCA_JOB=DEPRECATED_CODE_SCAN_CONTRIB
    - env: ORCA_JOB=ISOLATED_DEV
    - env: ORCA_JOB=INTEGRATED_DEV
    - env: ORCA_JOB=CORE_NEXT

# Install ORCA and prepare the environment.
before_install:
  # Clone the master branch for the latest release, develop for the dev HEAD, or
  # a tag (e.g., v1.0.0) for a specific release.
  - git clone --branch master --depth 1 https://github.com/acquia/orca.git ../orca
  - ../orca/bin/travis/before_install.sh

# Create the test fixture and place the SUT.
install: ../orca/bin/travis/install.sh

# Run the test script.
script: ../orca/bin/travis/script.sh

# Display debugging information in case of failure.
after_failure: ../orca/bin/travis/after_failure.sh
